#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
FILTER FASTA LABEL
James B. Pease
"""

import sys
import argparse
import os
from mixcore import fasta_text_iter

_LICENSE = """
http://www.github.org/jbpease/mixtape
MixTAPE: Mix of Tools for Analysis in Phylogenetics and Evolution

This file is part of MixTAPE.

MixTAPE is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MixTAPE is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with MixTAPE.  If not, see <http://www.gnu.org/licenses/>.
"""



def generate_argparser():
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
        epilog=_LICENSE)
    parser.add_argument('fasta', nargs='?', type=argparse.FileType('r'),
                        default=sys.stdin,
                        help="input fasta file")
    parser.add_argument("--min-length", nargs=1, type=int,
                        help="Integer for the minimum number of sites.")
    parser.add_argument('--out', type=os.path.abspath,
                        default=sys.stdout, help="output fasta file")
    return parser



def main(arguments=sys.argv[1:]):
    """Main method"""
    arguments = arguments if arguments is not None else sys.argv[1:]
    parser = generate_argparser() 
    args = parser.parse_args(args=arguments)
    sites = {}
    for header, seq in fasta_text_iter(args.fasta):
        for i, x in enumerate(seq):
            if i+1 not in sites:
                sites[i+1] = {}
            sites[i+1][x] = sites[i+1].get(x, 0) + 1
    for i in range(len(seq)):
        charstring = "          "
        chars = set(sites[i+1])
        if len(chars) == 1 and "-" not in chars:
            charstring = '$$$$$$$$$$'
        elif len(chars) == 2 and "-" in chars:
            charstring = '##########'
        elif len(chars) > 2:
            charstring = 'x'*int(10*max(sites[i+1].values())/sum(sites[i+1].values()))
            charstring += ' '*(10-len(charstring))
        print(i+1, charstring, sites[i+1])
        
    return ''


if __name__ == "__main__":
    main()
